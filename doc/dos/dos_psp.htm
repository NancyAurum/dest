<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>Format of Program Segment Prefix (PSP)</title>
</head>
<body background="Format%20of%20Program%20Segment%20Prefix%20(PSP)_files/background_item.gif"><!--'"</title></head>-->

<script async="" type="text/javascript" src="Format%20of%20Program%20Segment%20Prefix%20(PSP)_files/googletagservices_gpt.js"></script><script type="text/javascript" async="" src="Format%20of%20Program%20Segment%20Prefix%20(PSP)_files/google-analytics_ga.js"></script><script type="text/javascript">
//OwnerIQ
var __oiq_pct = 50;
if( __oiq_pct>=100 || Math.floor(Math.random()*100/(100-__oiq_pct)) > 0 ) {
var _oiqq = _oiqq || [];
_oiqq.push(['oiq_addPageBrand','Lycos']);
_oiqq.push(['oiq_addPageCat','Internet > Websites']);
_oiqq.push(['oiq_addPageLifecycle','Intend']);
_oiqq.push(['oiq_doTag']);
(function() {
var oiq = document.createElement('script'); oiq.type = 'text/javascript'; oiq.async = true;
oiq.src = document.location.protocol + '//px.owneriq.net/stas/s/lycosn.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(oiq, s);
})();
}
//Google Analytics
var _gaq = _gaq || [];
_gaq.push(['_setAccount','UA-21402695-19']);
_gaq.push(['_setDomainName','tripod.com']);
_gaq.push(['_setCustomVar',1,'member_name','faydoc',3]);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
//Lycos Init
function getReferrer() {
var all= this.document.cookie;
if (all== '') return false;
var cookie_name = 'REFERRER=';
var start = all.lastIndexOf(cookie_name);
if (start == -1) return false;
start += cookie_name.length;
var end = all.indexOf(';', start);
if (end == -1) end = all.length;
return all.substring(start, end);
}
function getQuery() {
var rfr = getReferrer();
if (rfr == '') return false;
var q = extractQuery(rfr, 'yahoo.com', 'p=');
if (q) return q;
q = extractQuery(rfr, '', 'q=');
return q ? q : "";
}
function extractQuery(full, site, q_param) {
var start = full.lastIndexOf(site);
if (start == -1) return false;
start = full.lastIndexOf(q_param);
if (start == -1) return false;
start += q_param.length;
var end = full.indexOf('&', start);
if (end == -1) end = full.length;
return unescape(full.substring(start, end)).split(" ").join("+");
}
function generateHref(atag, template){
atag.href=template.replace('_MYURL_', window.location.href.replace('http://', '')).replace('_MYTITLE_','Check%20out%20this%20Tripod%20Member%20site!'); 
}
var lycos_ad = Array();
var lycos_onload_timer;
var cm_role = "live";
var cm_host = "tripod.lycos.com";
var cm_taxid = "/memberembedded";
var tripod_member_name = "faydoc";
var tripod_member_page = "faydoc/structures/13/1378.htm";
var tripod_ratings_hash = "1717803043:6aec55ef96816deb1c9b010fae552b57";

var lycos_ad_category = {"find_what":"reliv.com"};

var lycos_ad_remote_addr = "209.202.244.9";
var lycos_ad_www_server = "www.tripod.lycos.com";
var lycos_ad_track_small = "";
var lycos_ad_track_served = "";
var lycos_search_query = getQuery();
</script>

<script type="text/javascript" src="Format%20of%20Program%20Segment%20Prefix%20(PSP)_files/init.js"></script>

<script type="text/javascript">
 var googletag = googletag || {};
 googletag.cmd = googletag.cmd || [];
 (function() {
   var gads = document.createElement('script');
   gads.async = true;
   gads.type = 'text/javascript';
   var useSSL = 'https:' == document.location.protocol;
   gads.src = (useSSL ? 'https:' : 'http:') +
     '//www.googletagservices.com/tag/js/gpt.js';
   var node = document.getElementsByTagName('script')[0];
   node.parentNode.insertBefore(gads, node);
 })();
</script>

<script type="text/javascript">
 googletag.cmd.push(function() {
   googletag.defineSlot('/95963596/TRI_300X250_dfp', [300, 250], 'div-gpt-ad-1450204159126-0').addService(googletag.pubads());
   googletag.defineSlot('/95963596/TRI_above_728x90_dfp', [728, 90], 'div-gpt-ad-1450204159126-1').addService(googletag.pubads());
   googletag.defineSlot('/95963596/TRI_below_728x90_dfp', [728, 90], 'div-gpt-ad-1450204159126-2').addService(googletag.pubads());
   googletag.pubads().enableSingleRequest();
   googletag.enableServices();
 });
</script>


<script type="text/javascript"> 
(function(isV)
{
    if( !isV )
    {
        return;
    }
    var adMgr = new AdManager();
    var lycos_prod_set = adMgr.chooseProductSet();
    var slots = ["leaderboard", "leaderboard2", "toolbar_image", "toolbar_text", "smallbox", "top_promo", "footer2", "slider"];
    var adCat = this.lycos_ad_category;
    adMgr.setForcedParam('page', (adCat && adCat.dmoz) ? adCat.dmoz : 'member');
    if (this.lycos_search_query)
    {
        adMgr.setForcedParam("keyword", this.lycos_search_query);
    } 
    else if(adCat && adCat.find_what)
    {
        adMgr.setForcedParam('keyword', adCat.find_what);
    }
    
    for (var s in slots)
    {
        var slot = slots[s];
        if (adMgr.isSlotAvailable(slot))
        {
            this.lycos_ad[slot] = adMgr.getSlot(slot);
        }
    }

    adMgr.renderHeader();
    adMgr.renderFooter();
}((function() {

var w = 0, h = 0, minimumThreshold = 300;

if (top == self)
{
    return true;
}
if (typeof(window.innerWidth) == 'number' )
{
    w = window.innerWidth;
    h = window.innerHeight;
}
else if (document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight))
{
    w = document.documentElement.clientWidth;
    h = document.documentElement.clientHeight;
}
else if (document.body && (document.body.clientWidth || document.body.clientHeight))
{
    w = document.body.clientWidth;
    h = document.body.clientHeight;
}
return ((w > minimumThreshold) && (h > minimumThreshold));
}())));




window.onload = function()
{
    var f = document.getElementById("FooterAd");
    var b = document.getElementsByTagName("body")[0];
    b.appendChild(f);
    f.style.display = "block";
    document.getElementById('lycosFooterAdiFrame').src = '/adm/ad/footerAd.iframe.html';
    


    
    // DOM Inj Ad
    (function(isTrellix)
    {
        var e = document.createElement('iframe');
        e.style.border = '0';
        e.style.margin = 0;
        e.style.display = 'block';
        e.style.cssFloat = 'right';
        e.style.height = '254px';
        e.style.overflow = 'hidden';
        e.style.padding = 0;
        e.style.width = '300px';


        var isBlokedByDomain = function( href )
        {
            var blockedDomains = [
                "ananyaporn13000.tripod.com",
                "xxxpornxxx.tripod.com"
            ];
            var flag = false;
            
            for( var i=0; i<blockedDomains.length; i++ )
            {
                if( href.search( blockedDomains[ i ] ) >= 0 )
                {
                    flag = true;
                }
            }
            return flag;
        }

        var getMetaContent = function( metaName )
        {
            var metas = document.getElementsByTagName('meta');
            for (i=0; i<metas.length; i++)
            { 
                if( metas[i].getAttribute("name") == metaName )
                { 
                    return metas[i].getAttribute("content"); 
                } 
            }
            return false;
        }
        
        var getCommentNodes = function(regexPattern)
        {
            var nodes = {};
            var nodesA = [];
            var preferredNodesList = ['a', 'c', 'b'];
        
            (function getNodesThatHaveComments(n, pattern)
            {
                if (n.hasChildNodes())
                {
                    if (n.tagName === 'IFRAME')
                    {
                        return false;
                    }
                    for (var i = 0; i < n.childNodes.length; i++)
                    {
                        if ((n.childNodes[i].nodeType === 8) && (pattern.test(n.childNodes[i].nodeValue)))
                        {
                            var areaName = pattern.exec(n.childNodes[i].nodeValue)[1];
                            nodes[areaName] = n;
                        }
                        else if (n.childNodes[i].nodeType === 1)
                        {
                            getNodesThatHaveComments(n.childNodes[i], pattern);
                        }
                    }
                }
            }(document.body, regexPattern));

            for (var i in preferredNodesList)
            {
                if (nodes[preferredNodesList[i]])
                {
                    if( isTrellix && nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode )
                    {
                        nodesA.push(nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode);
                    }
                    else
                    {
                        nodesA.push( nodes[preferredNodesList[i]] );
                    }
                }
            }
            return nodesA;
        }
        
        
        var properNode = null;
        var areaNodes = getCommentNodes( new RegExp( '^area Type="area_(\\w+)"' ) );

        for (var i = 0; i < areaNodes.length; i++)
        {
            var a = parseInt(getComputedStyle(areaNodes[i]).width);
            if ((a >= 300) && (a <= 400))
            {
                properNode = areaNodes[i];
                break;
            }
        }


        var propertyName = getMetaContent("property") || false;
        if( isTrellix && (properNode) )
        {
            e.src = '/adm/ad/injectAd.iframe.html';
            properNode.insertBefore(e, properNode.firstChild);
        }
        else if( isTrellix && !( properNode ) ) // Slap the ad eventhought there is no alocated slot
        {
            e.src = '/adm/ad/injectAd.iframe.html';
            e.style.cssFloat = 'none';
            var cdiv = document.createElement('div');
            cdiv.style = "width:300px;margin:10px auto;";
            cdiv.appendChild( e );
            b.insertBefore(cdiv, b.lastChild);
        }
        else if( !isBlokedByDomain( location.href ) )
        {
            var injF = document.createElement('iframe');
            injF.style.border = '0';
            injF.style.margin = 0;
            injF.style.display = 'block';
            injF.style.cssFloat = 'none';
            injF.style.height = '254px';
            injF.style.overflow = 'hidden';
            injF.style.padding = 0;
            injF.style.width = '300px';
            injF.src = '/adm/ad/injectAd.iframe.html';

            if( b && ( !isTrellix || ( typeof isTrellix == "undefined" ) ) ) // All other tripod props
            {
                var cdiv = document.createElement('div');
                cdiv.style = "width:300px;margin:10px auto;";
                cdiv.appendChild( injF );
                b.insertBefore(cdiv, b.lastChild);
            } 
        }
  }( document.isTrellix ));
}

</script>

<div id="tb_container" style="background:#DFDCCF; border-bottom:1px solid #393939; position:relative; z-index:999999999!important">
<!--form name="search" onSubmit="return searchit()" id='header_search' >
<input type="text" placeholder="Search" size=30 name="search2" value="">
<input type="button" value="Go!" onClick="searchit()">
</form>
<style>
form#header_search {
    width: 916px;
    margin: 0 auto 8px;
    position: relative;
}


form#header_search input {
    height: 40px;
    font-size: 14px;
    line-height: 40px;
    padding: 0 8px;
    box-sizing: border-box;
    background: #F4F2E9;
    border: 1px solid #BBB8B8;
    transition: background-color 300ms ease-out,
                color 300ms ease;
}

form#header_search input[type="text"] {
    width: 100%;
}
form#header_search input[type="text"]:focus {
    border-color: #A2D054;
    background-color: #fff;
    box-shadow: 0 0px 12px -4px #A2D054;
}



form#header_search input[type="button"] {
    position: absolute;
    top: 1px;
    right: 1px;
    opacity: 1;
    background: #DFDCCF;
    color: #463734;
    width: 125px;
    cursor: pointer;
    height: 38px;
    border: none;
}
form#header_search input[type="text"]:focus ~ input[type='button']:hover,
form#header_search input[type='button']:hover {
    background-color: #A5CE56;
    color: #fff;
}
form#header_search input[type="text"]:focus ~ input[type='button'] {
    background-color: #52AEDF;
    color: #fff;
}

</style>

<script>
function searchit(){
    
    // determine environment 
    var search_env 
    if (lycos_ad_www_server.indexOf(".pd.") > -1) {
       search_env = 'http://search51.pd.lycos.com/a/';
    } else if (lycos_ad_www_server.indexOf(".qa.") > -1) {
       search_env = 'http://search51.qa.lycos.com/a/';
    } else {
       search_env = 'http://search51.lycos.com/a/';
    }

var search_term = encodeURIComponent(document.search.search2.value)
var search_url = search_env+search_term;
window.open(search_url);

return false
}
</script-->
<style>
    .adCenterClass{margin:0 auto}
</style>
<div id="tb_ad" class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">

<div id="ad_container" style="display:block!important; float:left; width:728px ">
<script type="text/javascript">
if (typeof lycos_ad !== "undefined" && "leaderboard" in lycos_ad) {
  document.write(lycos_ad['leaderboard']);
}
</script>
</div>
</div>
</div>
<script type="text/javascript">
if (typeof lycos_ad !== "undefined" && "slider" in lycos_ad) {
  document.write(lycos_ad['slider']);
}
</script> <!-- added 7/22 -->
<div id="FooterAd" style="background:#DFDCCF; border-top:1px solid #393939; clear:both; display:none; width:100%!important; position:relative; z-index:999999!important; height:90px!important"> 
<div class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
<div id="footerAd_container" style="display:block!important; float:left; width:728px">
<iframe id="lycosFooterAdiFrame" style="border:0; display:block; float:left; height:96px; overflow:hidden; padding:0; width:750px"></iframe>
</div>
</div>
</div>


<center>
<table border="3" cellpadding="10" cellspacing="5">
<tbody><tr>
<td><!--webbot bot="Navigation" S-Type="global"
S-Orientation="horizontal" S-Rendering="graphics" B-Include-Home="FALSE"
B-Include-Up="TRUE" U-Page="/W:/doc/structures/13/1378.htm" S-Target startspan --><nobr>[&nbsp;<a href="https://faydoc.tripod.com/rfc/index.htm" target="">Up</a>&nbsp;]</nobr> <nobr>[&nbsp;<a href="http://www.fay.naverex.kiev.ua/docs/index.htm" target="">Docs&nbsp;Home</a>&nbsp;]</nobr><!--webbot bot="Navigation" endspan i-checksum="32769" -->
</td>
<td>
<h1 align="center"><font color="#FF00FF"><!--webbot bot="Navigation" S-Type="banner"
S-Rendering S-Orientation B-Include-Home B-Include-Up U-Page="/W:/doc/structures/13/1378.htm" S-Target startspan -->Format of Program Segment Prefix (PSP)<!--webbot bot="Navigation" endspan i-checksum="42839" --></font></h1>
</td>
<td><!--webbot bot="Navigation" S-Type="arrows"
S-Orientation="horizontal" S-Rendering="graphics" B-Include-Home="FALSE"
B-Include-Up="FALSE" U-Page="/W:/doc/structures/13/1378.htm" S-Target startspan --><nobr>[&nbsp;<a href="https://faydoc.tripod.com/structures/13/1377.htm" target="">Back</a>&nbsp;]</nobr> <nobr>[&nbsp;<a href="https://faydoc.tripod.com/structures/13/1379.htm" target="">Next</a>&nbsp;]</nobr><!--webbot bot="Navigation" endspan i-checksum="41158" -->
</td>
</tr>
</tbody></table>
</center>
<hr>
<table border="3" cellpadding="3" cellspacing="3">
<tbody><tr>
<th valign="top" align="center" nowrap="nowrap"><b>Offset</b></th>
<th valign="top" align="center" nowrap="nowrap"><b>Size</b></th>
<th valign="top" align="center" nowrap="nowrap"><b>Description</b></th>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>00h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 2 BYTEs </p>
</td>
<td valign="top"> INT 20 instruction for CP/M CALL 0 program termination the CDh
  20h here is often used as a signature for a valid PSP </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>02h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> WORD </p>
</td>
<td valign="top"> segment of first byte beyond memory allocated to program </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>04h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> BYTE </p>
</td>
<td valign="top"> (DOS) unused filler<br>
  (OS/2) count of fake DOS version returns </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>05h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> BYTE </p>
</td>
<td valign="top"> CP/M CALL 5 service request (FAR CALL to absolute 000C0h)<br>
  BUG: (DOS 2+ DEBUG) PSPs created by DEBUG point at 000BEh </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>06h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> WORD </p>
</td>
<td valign="top"> CP/M compatibility--size of first segment for .COM files </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>08h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 2 BYTEs </p>
</td>
<td valign="top"> remainder of FAR JMP at 05h </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>0Ah</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> DWORD </p>
</td>
<td valign="top"> stored INT 22 termination address </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> DWORD </p>
</td>
<td valign="top"> stored INT 23 control-Break handler address </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>12h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> DWORD </p>
</td>
<td valign="top"> DOS 1.1+ stored INT 24 critical error handler address </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>16h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> WORD </p>
</td>
<td valign="top"> segment of parent PSP </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>18h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 20 BYTEs </p>
</td>
<td valign="top"> DOS 2+ Job File Table, one byte per file handle, FFh = closed </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>2Ch</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> WORD </p>
</td>
<td valign="top"> DOS 2+ segment of environment for process (see <a href="file:///D:/Offline%20Explorer/www.delorie.com/djgpp/doc/rbinter/it/79/13.html">#01379</a>) </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>2Eh</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> DWORD </p>
</td>
<td valign="top"> DOS 2+ process's SS:SP on entry to last INT 21 call </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>32h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> WORD </p>
</td>
<td valign="top"> DOS 3+ number of entries in JFT (default 20) </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>34h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> DWORD </p>
</td>
<td valign="top"> DOS 3+ pointer to JFT (default PSP:0018h) </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>38h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> DWORD </p>
</td>
<td valign="top"> DOS 3+ pointer to previous PSP (default FFFFFFFFh in 3.x) used
  by SHARE in DOS 3.3 </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>3Ch</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> BYTE </p>
</td>
<td valign="top"> DOS 4+ (DBCS) interim console flag (see AX=6301h)<br>
  Novell DOS 7 DBCS interim flag as set with AX=6301h<br>
  (possibly also used by Far East MS-DOS 3.2-3.3) </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>3Dh</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> BYTE </p>
</td>
<td valign="top"> (APPEND) TrueName flag (see INT 2F/AX=B711h) </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>3Eh</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> BYTE </p>
</td>
<td valign="top"> (Novell NetWare) flag: next byte initialized if CEh<br>
  (OS/2) capabilities flag </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>3Fh</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> BYTE </p>
</td>
<td valign="top"> (Novell NetWare) Novell task number if previous byte is CEh </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>40h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 2 BYTEs </p>
</td>
<td valign="top"> DOS 5+ version to return on INT 21/AH=30h </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>42h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> WORD </p>
</td>
<td valign="top"> (MSWindows3) selector of next PSP (PDB) in linked list Windows
  keeps a linked list of Windows programs only </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>44h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> WORD </p>
</td>
<td valign="top"> (MSWindows3) "PDB_Partition" </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>46h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> WORD </p>
</td>
<td valign="top"> (MSWindows3) "PDB_NextPDB" </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>48h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> BYTE </p>
</td>
<td valign="top"> (MSWindows3) bit 0 set if non-Windows application (WINOLDAP) </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>49h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> BYTE </p>
</td>
<td valign="top"> unused by DOS versions &lt;= 6.00 </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>4Ch</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> WORD </p>
</td>
<td valign="top"> (MSWindows3) "PDB_EntryStack" </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>4Eh</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 2 BYTEs </p>
</td>
<td valign="top"> unused by DOS versions &lt;= 6.00 </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>50h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 3 BYTEs </p>
</td>
<td valign="top"> DOS 2+ service request (INT 21/RETF instructions) </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>53h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 2 BYTEs </p>
</td>
<td valign="top"> unused in DOS versions &lt;= 6.00 </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>55h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 7 BYTEs </p>
</td>
<td valign="top"> unused in DOS versions &lt;= 6.00; can be used to make first
  FCB into an extended FCB </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>5Ch</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 16 BYTEs </p>
</td>
<td valign="top"> first default FCB, filled in from first command line argument
  overwrites second FCB if opened </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>6Ch</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 16 BYTEs </p>
</td>
<td valign="top"> second default FCB, filled in from second command line
  argument overwrites beginning of command line if opened </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>7Ch</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 4 BYTEs </p>
</td>
<td valign="top"> unused </td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<p align="right"> <b>80h</b> </p>
</td>
<td valign="top" nowrap="nowrap">
<p align="right"> 128 BYTEs </p>
</td>
<td valign="top"> command line / default DTA<br>
  command tail is BYTE for length of tail, N BYTEs for the tail, followed by a
  BYTE containing 0Dh </td>
</tr>
</tbody></table>
<hr>
<table border="3" cellpadding="3" cellspacing="3">
<tbody><tr>
<td valign="top" align="center" nowrap="nowrap">
<p align="left"><b>Note:</b></p></td>
<td valign="top" align="center">
<p align="left"> In DOS v3+, the limit on simultaneously open files may be
increased by allocating memory for a new open file table, filling it with FFh,
copying the first 20 bytes from the default table, and adjusting the pointer and
count at 34h and 32h. However, DOS will only copy the first 20 file handles into
a child PSP (including the one created on EXEC).<br>
In an OS/2 DOS box, values of D0h-FEh in the open file table indicate device
drivers.<br>
Network redirectors based on the original MS-Net implementation use values of
80h-FEh in the open file table to indicate remote files; Novell NetWare also
uses values from FEh down to 80h or one more than FILES= (whichever is greater)
to indicate remote files (except on OS/2, where is uses CFh down to 80h).<br>
MS-DOS 5.00 incorrectly fills the FCB fields when loading a program high; the
first FCB is empty and the second contains the first parameter.<br>
Some DOS extenders place protected-mode values in various PSP fields such as the
"parent" field, which can confuse PSP walkers. Always check either for
the CDh 20h signature or that the suspected PSP is at the beginning of a memory
block which owns itself (the preceding paragraph should be a valid MCB with
"owner" the same as the suspected PSP).<br>
Novell NetWare updates the fields at offsets 3Eh and 3Fh without checking that a
legal PSP segment is current; see AH=50h for further discussion.<br>
For 4DOS and Windows95, the command tail may be more than 126 characters; in
that case, the length byte will be set to 7Fh (with an 0Dh in the 127th position
at offset FFh), and the first 126 characters will be stored in the PSP, with the
entire command line in the environment variable CMDLINE; under at least some
versions of 4DOS, the byte at offset FFh is *not* set to 0Dh, so there is no
terminating carriage return in the PSP's command tail. </p>
</td>
</tr>
<tr>
<td valign="top" nowrap="nowrap">
<b>Bugs:</b>
</td>
<td valign="top">
When shelling out from the Borland Pascal 7.00 IDE, overly-long command lines
will not be delimited by a 0Dh character, and the length byte is set to 80h! A
workaround is to always patch in a 0Dh at the last position of the command line
buffer before scanning the command line.
</td>
</tr>
</tbody></table>
<p> </p>


</body></html>