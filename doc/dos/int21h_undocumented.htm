<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head>
<title>List of undocumented DOS functions</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>
<body>
<p>DOS has a number of undocumented functions and features. Many of the 
functions dealt with internal tables or networking but some were 
seemingly not documented simply to give Microsoft an unfair advantage by
 doing things which other developers were unaware of. Microsoft did 
document some of these functions in the MS-DOS 5.0 Programmer's 
Reference. Of course, since DOS was relatively small, all of the 
undocumented functions were eventually figured out.</p>
<table style="border-collapse:collapse;border-color:rgb(136,136,136);border-width:1px" cellspacing="1" cellpadding="2" border="1">
<tbody>
<tr>
<th>Function</th>
<th>Purpose</th>
<th>DOS versions</th>
<th>Ever documented?</th>
<th>Notes</th>
</tr>
<tr>
<td>INT 21h function 1Fh</td>
<td>Get disk parameter block for default drive</td>
<td>2.0+</td>
<td>Yes, DOS 5.0</td>
<td>The DPB format changed slightly from DOS 3.x to DOS 4.0+</td>
</tr>
<tr>
<td>INT 21h function 32h</td>
<td>Get disk parameter block for specified drive</td>
<td>2.0+</td>
<td>Yes, DOS 5.0</td>
<td>The DPB format changed slightly from DOS 3.x to DOS 4.0+</td>
</tr>
<tr>
<td>INT 21h function 3302h</td>
<td>Swap Ctrl-Break flag</td>
<td>3.1+</td>
<td>No</td>
<td>Gets the current break flag and sets a new break flag in a single function call</td>
</tr>
<tr>
<td>INT 21h function 3303h</td>
<td>Get code page switching (CPSW) state</td>
<td>4.0 only</td>
<td>No</td>
<td>Reserved but not implemented (executes IRET)</td>
</tr>
<tr>
<td>INT 21h function 3304h</td>
<td>Set code page switching (CPSW) state</td>
<td>4.0 only</td>
<td>No</td>
<td>Reserved but not implemented (executes IRET)</td>
</tr>
<tr>
<td>INT 21h function 34h</td>
<td>Get InDOS flag pointer</td>
<td>2.0+</td>
<td>Yes, DOS 5.0</td>
<td>In DOS 3.0+ the DOS critical error flag immediately precedes this byte<br>Note: This function was also listed in the MS-DOS Encyclopedia</td>
</tr>
<tr>
<td>INT 21h function 3700h</td>
<td>Get switch character</td>
<td>2.0 - 4.0</td>
<td>Some OEM docs</td>
<td>In DOS 5.0+ this function always returns / (2Fh)</td>
</tr>
<tr>
<td>INT 21h function 3701h</td>
<td>Set switch character</td>
<td>2.0 - 4.0</td>
<td>Some OEM docs</td>
<td>DOS 2.x CONFIG.SYS SWITCHAR uses this function. In DOS 5.0+ this function is ignored</td>
</tr>
<tr>
<td>INT 21h function 3702h</td>
<td>Get availdev flag</td>
<td>2.0 - 2.25</td>
<td>No</td>
<td>In DOS 3.0+ this function always returns true (FFh)</td>
</tr>
<tr>
<td>INT 21h function 3703h</td>
<td>Set availdev flag</td>
<td>2.0 - 2.25</td>
<td>No</td>
<td>DOS 2.x CONFIG.SYS AVAILDEV uses this function. In DOS 3.0+ this function is ignored</td>
</tr>
<tr>
<td>INT 21h function 4B01h</td>
<td>Load program</td>
<td>2.0+</td>
<td>Yes, DOS 5.0</td>
<td>Loads a program into memory without executing it and returns the 
program's SS:SP and CS:IP in the exec parameter block; the current PSP 
is set to that of loaded program</td>
</tr>
<tr>
<td>INT 21h function 50h</td>
<td>Set current PSP</td>
<td>2.0+</td>
<td>Yes, DOS 5.0</td>
<td></td>
</tr>
<tr>
<td>INT 21h function 51h</td>
<td>Get current PSP</td>
<td>2.0+</td>
<td>Yes, DOS 5.0</td>
<td>Documented function 62h is a duplicate of this function</td>
</tr>
<tr>
<td>INT 21h function 52h</td>
<td>Get DOS internal tables (<a href="https://pcdosretro.gitlab.io/sysvars.htm">SYSVARS</a>) pointer</td>
<td>2.0+</td>
<td>No</td>
<td></td>
</tr>
<tr>
<td>INT 21h function 53h</td>
<td>Create disk parameter block</td>
<td>2.0+</td>
<td>No</td>
<td>This is used by DOS initialization code to create DPBs from BPBs for standard disk drives</td>
</tr>
<tr>
<td>INT 21h function 55h</td>
<td>Create program PSP</td>
<td>2.0+</td>
<td>No</td>
<td>This function shares code with function 26h (Create PSP) but creates a child PSP</td>
</tr>
<tr>
<td>INT 21h function 5702h</td>
<td>Get extended attributes</td>
<td>4.0 only</td>
<td>No</td>
<td>Stub function for local files; executes INT 2Fh function 112Dh for remote files</td>
</tr>
<tr>
<td>INT 21h function 5703h</td>
<td>Get extended attributes name list</td>
<td>4.0 only</td>
<td>No</td>
<td>Stub function for local files; executes INT 2Fh function 112Dh for remote files</td>
</tr>
<tr>
<td>INT 21h function 5704h</td>
<td>Set extended attributes</td>
<td>4.0 only</td>
<td>No</td>
<td>Stub function for local files; executes INT 2Fh function 112Dh for remote files</td>
</tr>
<tr>
<td>INT 21h function 5Dh</td>
<td>File sharing</td>
<td>3.0+</td>
<td>No</td>
<td>Functions 5D00h-5D05h are used by SHARE.EXE; function 5D06h returns a
 pointer to the DOS swappable data area; functions 5D07h-5D09h are used 
by networking for printers</td>
</tr>
<tr>
<td>INT 21h function 5D0Ah</td>
<td>Set extended error info</td>
<td>3.1+</td>
<td>Yes, DOS 5.0</td>
<td></td>
</tr>
<tr>
<td>INT 21h function 5D0Bh</td>
<td>Get DOS swappable data area list</td>
<td>4.0 only</td>
<td>No</td>
<td>Similar to function 5D06h (Get DOS swappable data area pointer)</td>
</tr>
<tr>
<td>INT 21h function 5E01h</td>
<td>Set machine name</td>
<td>3.0+</td>
<td>No</td>
<td>Used by networking</td>
</tr>
<tr>
<td>INT 21h function 5E04h</td>
<td>Set print mode</td>
<td>3.1+</td>
<td>No</td>
<td>Used by networking</td>
</tr>
<tr>
<td>INT 21h function 5E05h</td>
<td>Get print mode</td>
<td>3.1+</td>
<td>No</td>
<td>Used by networking</td>
</tr>
<tr>
<td>INT 21h function 5F00h</td>
<td>Get redirection mode</td>
<td>3.1+</td>
<td>No</td>
<td>Used by networking</td>
</tr>
<tr>
<td>INT 21h function 5F01h</td>
<td>Set redirection mode</td>
<td>3.1+</td>
<td>No</td>
<td>Used by networking</td>
</tr>
<tr>
<td>INT 21h function 5F05h</td>
<td>Get redirection list entry extended</td>
<td>4.0+</td>
<td>No</td>
<td>Used by networking</td>
</tr>
<tr>
<td>INT 21h function 5F06h</td>
<td>Get IFS function entry</td>
<td>4.0 only</td>
<td>No</td>
<td>Similar to function 5F05h, executes INT 2Fh function 111Eh; DOS 4 FILESYS command uses this function</td>
</tr>
<tr>
<td>INT 21h function 5F07h</td>
<td>Enable drive</td>
<td>4.0+</td>
<td>No</td>
<td>Sets the in use bit in the drive's CDS flags</td>
</tr>
<tr>
<td>INT 21h function 5F08h</td>
<td>Disable drive</td>
<td>4.0+</td>
<td>No</td>
<td>Clears the in use bit in the drive's CDS flags</td>
</tr>
<tr>
<td>INT 21h function 60h</td>
<td>Qualify filename</td>
<td>3.0+</td>
<td>No</td>
<td>DOS 4.0+ TRUENAME command uses this function</td>
</tr>
<tr>
<td>INT 21h function 61h</td>
<td><a href="https://pcdosretro.gitlab.io/int21func61.txt">Path parse</a></td>
<td>3.0 only</td>
<td>No</td>
<td>Filespec string parser. In DOS 3.1+ this function does nothing</td>
</tr>
<tr>
<td>INT 21h function 6300h</td>
<td>Get DBCS lead byte table pointer</td>
<td>2.25+</td>
<td>Some OEM docs</td>
<td>Only present in DBCS versions of DOS. In non-DBCS versions this function returns a pointer to an empty table</td>
</tr>
<tr>
<td>INT 21h function 6301h</td>
<td>Set interim console flag</td>
<td>2.25+</td>
<td>Some OEM docs</td>
<td>Only present in DBCS versions of DOS. In non-DBCS versions this function does nothing</td>
</tr>
<tr>
<td>INT 21h function 6302h</td>
<td>Get interim console flag</td>
<td>2.25+</td>
<td>Some OEM docs</td>
<td>Only present in DBCS versions of DOS. In non-DBCS versions this function does nothing</td>
</tr>
<tr>
<td>INT 21h function 64h</td>
<td>Set wait for external event flag</td>
<td>3.2+</td>
<td>No</td>
<td>This was primarily meant for the PC Convertible</td>
</tr>
<tr>
<td>INT 21h function 6503h</td>
<td>Get country lowercase table</td>
<td>3.3+</td>
<td>No</td>
<td>Reserved until DOS 6.2</td>
</tr>
<tr>
<td>INT 21h function 6505h</td>
<td>Get country filename character table</td>
<td>3.3+</td>
<td>Yes, DOS 5.0</td>
<td></td>
</tr>
<tr>
<td>INT 21h function 6520h</td>
<td>Uppercase character</td>
<td>4.0+</td>
<td>Yes, DOS 5.0</td>
<td></td>
</tr>
<tr>
<td>INT 21h function 6521h</td>
<td>Uppercase string</td>
<td>4.0+</td>
<td>Yes, DOS 5.0</td>
<td></td>
</tr>
<tr>
<td>INT 21h function 6522h</td>
<td>Uppercase ASCIIZ string</td>
<td>4.0+</td>
<td>Yes, DOS 5.0</td>
<td></td>
</tr>
<tr>
<td>INT 21h function 6523h</td>
<td>Yes/no check</td>
<td>4.0+</td>
<td>No</td>
<td></td>
</tr>
<tr>
<td>INT 21h function 65A0h</td>
<td>Uppercase filename character</td>
<td>4.0+</td>
<td>No</td>
<td>Not functional until PC DOS 7.0 due to a bug</td>
</tr>
<tr>
<td>INT 21h function 65A1h</td>
<td>Uppercase filename string</td>
<td>4.0+</td>
<td>No</td>
<td>Not functional until PC DOS 7.0 due to a bug</td>
</tr>
<tr>
<td>INT 21h function 65A2h</td>
<td>Uppercase filename ASCIIZ string</td>
<td>4.0+</td>
<td>No</td>
<td>Not functional until PC DOS 7.0 due to a bug</td>
</tr>
<tr>
<td>INT 21h function 65A3h</td>
<td>Yes/no check</td>
<td>4.0+</td>
<td>No</td>
<td>Not functional until PC DOS 7.0 due to a bug; exists because of code
 which checks for AL &gt;= 20h, then checks the high bit to determine 
which character table to use and masks off the high bit. Since the 
character table is irrelevant for the yes/no check, this is a duplicate 
of function 6523h</td>
</tr>
<tr>
<td>INT 21h function 69h</td>
<td>Get or set media info</td>
<td>4.0+</td>
<td>No</td>
<td>Uses function 440Dh to get (IOCTL code 0866h) or set (IOCTL code 
0846h) the media ID (volume label, serial number, and file system type) 
in the extended BPB</td>
</tr>
<tr>
<td>INT 21h function 6Ah</td>
<td>Commit file</td>
<td>4.0+</td>
<td>No</td>
<td>Duplicate of documented function 68h</td>
</tr>
<tr>
<td>INT 21h function 6Bh</td>
<td>IFS IOCTL</td>
<td>4.0 only</td>
<td>No</td>
<td>Executes INT 2Fh function 112Fh. In DOS 5.0+ this function does nothing</td>
</tr>
<tr bgcolor="beige">
<td>INT 21h function 6Dh</td>
<td>ROM find first</td>
<td>ROM 5.0+ only</td>
<td>No</td>
<td></td>
</tr>
<tr bgcolor="beige">
<td>INT 21h function 6Eh</td>
<td>ROM find next</td>
<td>ROM 5.0+ only</td>
<td>No</td>
<td></td>
</tr>
<tr bgcolor="beige">
<td>INT 21h function 6F00h</td>
<td>Get ROM scan start address</td>
<td>ROM 5.0+ only</td>
<td>No</td>
<td></td>
</tr>
<tr bgcolor="beige">
<td>INT 21h function 6F01h</td>
<td>Set ROM scan start address</td>
<td>ROM 5.0+ only</td>
<td>No</td>
<td></td>
</tr>
<tr bgcolor="beige">
<td>INT 21h function 6F02h</td>
<td>Get pointer to ROM exclude region list</td>
<td>ROM 5.0+ only</td>
<td>No</td>
<td></td>
</tr>
<tr bgcolor="beige">
<td>INT 21h function 6F03h</td>
<td>Set pointer to ROM exclude region list</td>
<td>ROM 5.0+ only</td>
<td>No</td>
<td></td>
</tr>
<tr>
<td>INT 28h</td>
<td>Idle handler</td>
<td>2.0+</td>
<td>Yes, DOS 5.0</td>
<td>INT 28h is issued during the DOS keyboard idle loop. INT 28h is also
 called once for every 64 characters output (every 4 characters output 
in DOS 2.x and 3.x) via INT 21h function 02h (note INT 21h function 09h 
uses the function 02h code). INT 28h was originally added so that PRINT 
could do background printing</td>
</tr>
<tr>
<td>INT 29h</td>
<td>Fast character output</td>
<td>2.0+</td>
<td>Yes, DOS 5.0</td>
<td>Used by the builtin CON driver and ANSI.SYS for fast console output.
 Drivers which support this will have bit 4 set in their device 
attribute word</td>
</tr>
<tr>
<td>INT 2Ah</td>
<td>Network/critical section</td>
<td>3.0+</td>
<td>No</td>
<td></td>
</tr>
<tr>
<td>INT 2Eh</td>
<td>Execute command</td>
<td>2.0+</td>
<td>Partially, DOS 5.0</td>
<td>The MS-DOS 5.0 Programmer's Reference lists this as "Reload Transient" but gives no further details</td>
</tr>
<tr>
<td>INT 2Fh</td>
<td><a href="https://pcdosretro.gitlab.io/dosint2f.txt">Multiplex</a></td>
<td>2.0+</td>
<td>Depends on function</td>
<td>In DOS 2.x this was specifically for PRINT with only two functions: AH=00h to submit a file and AH=01h to cancel a file<br>In
 DOS 3.0+ many programs including DOS itself provide services on INT 2Fh
 which are selected by the program identifier code in AH</td>
</tr>
</tbody>
</table>
<p>Additional notes:</p>
<ul>
<li>INT 21h functions 11h and 12h (FCB find first file and FCB find next
 file) return the file's directory entry after the unopened FCB in the 
DTA, this was documented in DOS 5.0.
</li><li>INT 21h function 4Eh (Find first file) returns attribute value 
40h to indicate a device name in DOS 3.0+. Device names will never be 
returned if wildcards are used.
</li><li>INT 21h function 440Dh, IOCTL codes 0846h (Set media ID) and 
0866h (Get media ID) were documented in DOS 5.0 but INT 21h function 69h
 was not.
</li><li>Undocumented PSP fields:
<ul>
<li>16h-17h: Parent PSP segment (2.0+)
</li><li>18h-2Bh: Default file table (20 bytes) (2.0+)
</li><li>2Eh-31h: Stack pointer (SS:SP) after last DOS call (2.0+)
</li><li>32h-33h: File table size (default 20) (3.0+)
</li><li>34h-37h: File table pointer (default PSP:18h) (3.0+)
</li><li>38h-3Bh: Pointer to next PSP (SHARE only) (3.0+)
</li><li>3Ch: Interim console flag (DBCS versions only) (3.0+)
</li><li>3Dh: Return truename flag (APPEND only) (4.0+)
</li><li>3Eh-3Fh: Used by Novell Netware shell
</li><li>40h-41h: DOS version for SETVER (4.0+)
</li></ul>
</li><li>The disk parameter block (DPB) was undocumented prior to DOS 
5.0. The DPB format changed slightly from DOS 3.x to DOS 4.0 due to the 
sectors per FAT field being increased from a byte to a word.
</li><li>The memory control block (MCB) header format was undocumented 
prior to DOS 5.0. While the MCB header format was documented in DOS 5.0,
 the method of finding the first MCB (the word at SYSVARS - 2) was not.
</li></ul>
<p>For more info see <a href="https://pcdosretro.gitlab.io/dosfunc.txt">DOS functions</a>, <a href="https://pcdosretro.gitlab.io/dosblks.txt">DOS tables and structures</a> and <a href="https://pcdosretro.gitlab.io/sysvars.htm">SYSVARS</a></p>

</body></html>